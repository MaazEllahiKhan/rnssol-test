version: 2
jobs:
  build_code_develop:
    docker:
      - image: circleci/node:12

    working_directory: ~/rensol-test
    steps:
      - checkout

      # - restore_cache:
      #     keys:
      #         - v1-dependencies-{{ checksum "package.json" }}
      #         - v1-dependencies-

      - run:
          name: npm install
          command: npm i

      # - save_cache:
      #     key: v1-dependencies-{{ checksum "package.json" }}
      #     paths:
      #         - node_modules
      - run:
          name: build
          command: npm run build



  deploy_code_develop:
    docker:
      - image: circleci/node:12
    working_directory: ~/rensol-test
    steps:

      - run:
          name: run
          command: npm run start

  # build_code_staging:
  #   docker:
  #     - image: circleci/node:12

  #   working_directory: ~/white-label-exchange-admin-portal-staging
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         keys:
  #             - v1-dependencies-{{ checksum "package.json" }}
  #             - v1-dependencies-
      
  #     - run:
  #         name: 'Set env'
  #         command: echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV

  #     - run:
  #         name: npm install
  #         command: npm i

  #     - save_cache:
  #         key: v1-dependencies-{{ checksum "package.json" }}
  #         paths:
  #             - node_modules

  #     - run:
  #         name: ng build
  #         command: npm run staging
  #     # Cache the dist folder for the deploy job
  #     - save_cache:
  #         key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
  #         paths:
  #             - dist

  # delete_code_staging:
  #   machine:
  #     enabled: true

  #   steps:
  #     - add_ssh_keys:
  #           fingerprints:
  #             - $SSH_FINGERPRINT

  #     - run:
  #         name: SSH Remove Frontend
  #         command: |
  #             ssh $SSH_USER_STAGING@$SSH_HOST_STAGING bash -c '
  #               rm -rf /home/circleci/white-label-exchange-admin-portal-staging'

  # deploy_code_staging:
  #   docker:
  #     - image: circleci/node:12
  #   working_directory: ~/white-label-exchange-admin-portal-staging
  #   user: root
  #   steps:
  #     - add_ssh_keys:
  #           fingerprints:
  #             - $SSH_FINGERPRINT

  #     - restore_cache:
  #               key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

  #     - run:
  #         name: SSH SCP on develop for copy dist
  #         command: scp -o StrictHostKeyChecking=no -r ./dist/ $SSH_USER_STAGING@$SSH_HOST_STAGING:/home/circleci/white-label-exchange-admin-portal-staging




  # build_code_master:
  #   docker:
  #     - image: circleci/node:12

  #   working_directory: ~/white-label-exchange-admin-portal-staging
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         keys:
  #             - v1-dependencies-{{ checksum "package.json" }}
  #             - v1-dependencies-
      
  #     - run:
  #         name: 'Set env'
  #         command: echo 'export NG_CLI_ANALYTICS=ci' >> $BASH_ENV

  #     - run:
  #         name: npm install
  #         command: npm i

  #     - save_cache:
  #         key: v1-dependencies-{{ checksum "package.json" }}
  #         paths:
  #             - node_modules

  #     - run:
  #         name: ng build
  #         command: npm run prod
  #     # Cache the dist folder for the deploy job
  #     - save_cache:
  #         key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
  #         paths:
  #             - dist

  # delete_code_master:
  #   machine:
  #     enabled: true

  #   steps:
  #     - add_ssh_keys:
  #           fingerprints:
  #             - $SSH_FINGERPRINT_MASTER

  #     - run:
  #         name: SSH Remove Frontend From server
  #         command: |
  #             ssh $SSH_USER_MASTER@$SSH_HOST_MASTER bash -c '
  #               rm -rf /home/circleci/cryptosook-admin-portal-frontend'

  # deploy_code_master:
  #   docker:
  #     - image: circleci/node:12
  #   working_directory: ~/white-label-exchange-admin-portal-staging
  #   user: root
  #   steps:
  #     - add_ssh_keys:
  #           fingerprints:
  #             - $SSH_FINGERPRINT_MASTER

  #     - restore_cache:
  #               key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}

  #     - run:
  #         name: SSH SCP on develop for copy dist
  #         command: scp -o StrictHostKeyChecking=no -r ./dist/ $SSH_USER_MASTER@$SSH_HOST_MASTER:/home/circleci/cryptosook-admin-portal-frontend



workflows:
  version: 2
  build_deploy_develop:
     jobs:
      - build_code_develop:
          filters:
            branches:
              only:
                - circle-ci-addition
      - deploy_code_develop:
          filters:
            branches:
              only:
                - circle-ci-addition
          requires:
            - build_code_develop
  
  # build_deploy_staging:
  #    jobs:
  #     - build_code_staging:
  #         filters:
  #           branches:
  #             only:
  #               - staging
  #     - delete_code_staging:
  #         filters:
  #           branches:
  #             only:
  #               - staging
  #         requires:
  #           - build_code_staging
  #     - deploy_code_staging:
  #         filters:
  #           branches:
  #             only:
  #               - staging
  #         requires:
  #           - delete_code_staging




  # build_deploy_master:
  #    jobs:
  #     - build_code_master:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #     - delete_code_master:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #         requires:
  #           - build_code_master
  #     - deploy_code_master:
  #         filters:
  #           branches:
  #             only:
  #               - master
  #         requires:
  #           - delete_code_master
